#!/bin/bash

trap cint INT

function cint(){
  echo "!! Caught ^C, exiting..."
  kill_all
}
      
function kill_all(){
  echo "!! kill_all()"
  if [ -n "$rpid" ] && kill -0 $rpid 2> /dev/null ; then
    echo "!! Exiting rmiregistry (pid $rpid)"
    kill -9 $rpid
  fi

  if [ -n "$jpid" ] && kill -0 $jpid 2> /dev/null ; then
    echo "!! Exiting java/server (pid $jpid)"
    kill -9 $jpid
  fi

  exit
}

echo "!! Compiling..."
cd nextQuest/src/
javac -g -encoding utf-8 -d ./../../ `find ./nextQuest/server/ -type f -printf "%p "` 

if [ "$?" != "0" ]; then
  echo "!! Compile error, exiting..."
  exit
fi


echo "!! Running rmiregistry..."
cd ../../
rmiregistry &
rpid=$!


if [ $1 == "vmserver" ] ; then
  echo "!! Running on public server"
  java -classpath "./:./lib/com.mysql.jdbc.Driver.jar" -Djava.rmi.server.hostname=nextquest.sytes.net -Djava.security.policy=security.policy nextQuest.server.nextQuestServer mysql=nextquest.vserver.cz dbuser=user dbpass=pass.mysql@nextquest &
  jpid=$!
else
  echo "!! Running on local/private computer"
  java -classpath "./:./lib/com.mysql.jdbc.Driver.jar" -Djava.security.policy=security.policy nextQuest.server.nextQuestServer mysql=nextquest.vserver.cz dbuser=user dbpass=pass.mysql@nextquest &
  jpid=$!
fi


while :; do 
  if ! kill -0 $rpid 2> /dev/null ; then
    echo "rmiregistry do not run! Exiting..."
    kill_all
  fi
  
  if ! kill -0 $jpid 2> /dev/null ; then
    echo "java/server do not run! Exiting..."
    kill_all
  fi
  
  sleep 1
done

echo "wat?